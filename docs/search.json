[
  {
    "objectID": "SSH.html",
    "href": "SSH.html",
    "title": "OpenSSH",
    "section": "",
    "text": "SSH(Secure Shell) 키 기반 인증은 ID & Password 인증에 비해 보안이 강화되고 자동인증으로 편리합니다.\nSSH에는 여러종류가 있지만 여기에서는 Git 설치 시에 bundle로 설치되는 OpenSSH를 사용합니다."
  },
  {
    "objectID": "SSH.html#필요성",
    "href": "SSH.html#필요성",
    "title": "OpenSSH",
    "section": "",
    "text": "SSH(Secure Shell) 키 기반 인증은 ID & Password 인증에 비해 보안이 강화되고 자동인증으로 편리합니다.\nSSH에는 여러종류가 있지만 여기에서는 Git 설치 시에 bundle로 설치되는 OpenSSH를 사용합니다."
  },
  {
    "objectID": "SSH.html#openssh의-설치",
    "href": "SSH.html#openssh의-설치",
    "title": "OpenSSH",
    "section": "OpenSSH의 설치",
    "text": "OpenSSH의 설치\n\nGit 설치 시 옵션으로 설치되어 있습니다."
  },
  {
    "objectID": "SSH.html#원도우에서-기존키의-제거",
    "href": "SSH.html#원도우에서-기존키의-제거",
    "title": "OpenSSH",
    "section": "원도우에서 기존키의 제거",
    "text": "원도우에서 기존키의 제거\n\n키를 새로 만드는 경우에는 상관없지만 기존키를 삭제해야 한다면 아래와 같이 진행합니다.\nC:&lt;YourUsername&gt;.ssh 디렉토리에 있는 개인키(예시 id_rsa) 및 공개키 (예시 id_rsa.pub) 파일들을 수동으로 삭제합니다."
  },
  {
    "objectID": "SSH.html#새로운-키의-생성",
    "href": "SSH.html#새로운-키의-생성",
    "title": "OpenSSH",
    "section": "새로운 키의 생성",
    "text": "새로운 키의 생성\n\nGit 설치매뉴얼 중 다음을 참고하였습니다 https://git-scm.com/book/ko/v2/Git-%ec%84%9c%eb%b2%84-SSH-%ea%b3%b5%ea%b0%9c%ed%82%a4-%eb%a7%8c%eb%93%a4%ea%b8%b0\nC:\\Program Files\\Git\\usr\\bin\\에 위치하는 ssh-keygen.exe를 구동시켜야 하므로 git-bash를 열어서 먼저 이동하여야 합니다.\nbash에서 ssh-keygen 프로그램을 실행하면\n\n설치경로는 기본값으로 진행하고\npassphrase는 empty로 하면 원격접속시에 비밀번호를 묻지 않게 되므로 empty로 설정하여 진행합니다.\n\nC:\\Users\\&lt;YourUsername\\&gt;.ssh가 생성되면서 id_ed25519와 id_ed25519.pub 파일이 생성됩니다.\n\n이 중 *.pub가 공개키입니다."
  },
  {
    "objectID": "SSH.html#ssh-agent-확인하기",
    "href": "SSH.html#ssh-agent-확인하기",
    "title": "OpenSSH",
    "section": "SSH agent 확인하기",
    "text": "SSH agent 확인하기\n\n원도우의 경우 서비스창에서 OPenSSH Authentication Agent가 시행중인지 확인합니다.\nbash 창에서 아래의 명령을 입력해도 됩니다. ssh-agent가 실행중인지 확인합니다.\n\nAgent 속성을 확인하여 시작유형을 자동으로 설정하셔야 하고\n복구탭에서 첫째, 둘째, 후속 실패시에 대한 조치를 서비스 다시 시작으로 설정해야 합니다."
  },
  {
    "objectID": "SSH.html#gitgub에-공개키-등록하기",
    "href": "SSH.html#gitgub에-공개키-등록하기",
    "title": "OpenSSH",
    "section": "Gitgub에 공개키 등록하기",
    "text": "Gitgub에 공개키 등록하기\n\nGitHub에 로그인한 후 오른쪽 상단의 프로필 아이콘을 클릭하고 Settings를 선택합니다.\n왼쪽 메뉴에서 SSH and GPG keys를 선택합니다.\nNew SSH key 버튼을 클릭합니다.\nTitle에는 키의 제목을 입력합니다.\nKey에는 id_ed25519.pub 파일의 내용을 복사하여 붙여넣습니다.\nAdd SSH key 버튼을 클릭합니다."
  },
  {
    "objectID": "SSH.html#gitgub-최초연결-설정",
    "href": "SSH.html#gitgub-최초연결-설정",
    "title": "OpenSSH",
    "section": "Gitgub 최초연결 설정",
    "text": "Gitgub 최초연결 설정\n\nbash창에서 아래의 명령을 입력합니다.\n\nssh -T git@github.com\n\n처음 연결시에 “This key is not known by any other names”라는 메시지가 나오는데 yes를 입력합니다.\n“Hi ! You’ve successfully authenticated, but GitHub does not provide shell access.”라는 메시지가 나오면 성공입니다."
  },
  {
    "objectID": "SSH.html#ssh-url로-변경",
    "href": "SSH.html#ssh-url로-변경",
    "title": "OpenSSH",
    "section": "SSH URL로 변경",
    "text": "SSH URL로 변경\n\n기존의 HTTPS URL을 SSH URL로 변경합니다.\n원격저장소의 HTTPS 옆에 있으므로 복사해서 git remote add origin 명령을 통하면됩니다.\n기존의 HTTOS URL을 변경하는 방법은 아래와 같습니다.\n\ngit remote set-url origin git@github.com:&lt;username&gt;/&lt;repository&gt;.git"
  }
]